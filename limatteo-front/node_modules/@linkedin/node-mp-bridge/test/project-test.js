'use strict';

const expect = require('chai').expect;
const fixturify = require('fixturify');
const fs = require('fs-extra');
const path = require('path')
const Project = require('../').Project;

const FIXTURES = path.join(__dirname, '../fixtures');
const TMP_ROOT = path.join(__dirname,'../tmp/example-mp_trunk');

describe('Project', function() {
  it('errors correctly if required files are missing', function() {
    expect(() => new Project(`${FIXTURES}/invalid/`).validate()).to.throw(`Missing yarn.lock, package.json, product-spec.json in '${FIXTURES}/invalid/'.`);
  });

  it('reports changed dependencies', function() {
    let project = new Project(`${FIXTURES}/change-reporting/`);
    let { added, changed, removed } = project.transformedProductSpec();

    expect(added).to.deep.equal(['baz@1.0.1']);
    expect(changed).to.deep.equal(['foo@2.0.0']);
    expect(removed).to.deep.equal(['bar@0.8.7']);
  });

  describe('getComponentsToInstall', function() {
    it('re-throws unexpected errors', function() {
      fixturify.writeSync(TMP_ROOT, {
        'package.json': JSON.stringify({
          name: "example-mp"
        }),

        'bower.lock': JSON.stringify([
          {
            'dependencies': {},
            'originalFolderName': 'jquery',
            'artifactoryUrl': 'â€¦',
            'version': '3.1.0',
            'license': 'MIT',
            'packageName': 'jquery',
            'intent': '>3',
            'name': '@components/jquery',
          }
        ]),

        'yarn.lock': '',

        'product-spec.json': JSON.stringify({
          "name": "example-mp",
          "product": {},
          "external": {}
        }),

        bower_components: {
          jquery: {
            'bower.json': {  // Will cause EISDIR.
              foo: 'bar',
            },
          },
        },
      });

      const project = new Project(TMP_ROOT);

      expect(() => project.getComponentsToInstall()).to.throw(/EISDIR/);

      fs.removeSync(TMP_ROOT);
    });
  });

  it('bower can be optional (vweb)', function() {
    let product = new Project(`${FIXTURES}/voyager-web-no-bower/`);
    let { productSpec } = product.transformedProductSpec();

    expect(productSpec).to.have.keys([
      'archive',
      'build',
      'comment',
      'dependencyResolution',
      'description',
      'extSCM',
      'external',
      'group',
      'name',
      'product',
      'review',
      'runtime',
      'scmUrl',
      'topology',
      'trunkDev',
      'trunkGuardian',
      'variants',
      'version',
      'watchers'
    ]);

    expect(productSpec.name).to.eql('voyager-web');
    expect(productSpec.external.acorn).to.eql('npm:acorn:3.2.0');
    expect(productSpec.external['jquery-component']).to.eql(undefined);

    expect(productSpec.external.testng).to.eql('org.testng:testng:6.4');

    expect(Object.keys(productSpec.external)).to.eql([
      'acorn',
      'analyze-css',
      'babel-eslint',
      'babel-plugin-external-helpers',
      'babel-plugin-transform-es2015-spread',
      'babel-plugin-transform-object-rest-spread',
      'broccoli-builder',
      'broccoli-clean-css',
      'broccoli-concat',
      'broccoli-concat-analyser',
      'broccoli-css-lang-optimizer',
      'broccoli-debug',
      'broccoli-eyeglass',
      'broccoli-funnel',
      'broccoli-merge-trees',
      'broccoli-persistent-filter',
      'calculate-cache-key-for-tree',
      'chalk',
      'cli-table',
      'colors',
      'commander',
      'connect-restreamer',
      'ember-a11y-testing',
      'ember-add-in-repo-tests',
      'ember-app-scheduler',
      'ember-asset-loader',
      'ember-cli',
      'ember-cli-app-version',
      'ember-cli-autoprefixer',
      'ember-cli-babel',
      'ember-cli-dependency-checker',
      'ember-cli-document-title',
      'ember-cli-eyeglass',
      'ember-cli-htmlbars',
      'ember-cli-htmlbars-inline-precompile',
      'ember-cli-inject-live-reload',
      'ember-cli-optimize',
      'ember-cli-pretender',
      'ember-cli-qunit',
      'ember-cli-template-lint',
      'ember-cli-uglify',
      'ember-data',
      'ember-disable-proxy-controllers',
      'ember-drag-drop',
      'ember-engines',
      'ember-exam',
      'ember-export-application-global',
      'ember-faker',
      'ember-fetch',
      'ember-highcharts',
      'ember-holy-futuristic-template-namespacing-batman',
      'ember-inflector',
      'ember-lifeline',
      'ember-line-clamp',
      'ember-link-action',
      'ember-load-initializers',
      'ember-local-config',
      'ember-m3',
      'ember-maybe-import-regenerator',
      'ember-native-dom-helpers',
      'ember-perf-timeline',
      'ember-prefetch',
      'ember-resolver',
      'ember-rollup',
      'ember-route-action-helper',
      'ember-route-alias',
      'ember-router-service-polyfill',
      'ember-singularity-mixins',
      'ember-sinon-sandbox',
      'ember-sortable',
      'ember-spaniel',
      'ember-template-lint',
      'ember-truncate',
      'ember-vendor-split',
      'ember-wormhole',
      'escape-string-regexp',
      'eslint',
      'eslint-config-airbnb-base',
      'eslint-config-prettier',
      'express',
      'eyeglass-restyle',
      'fixturify',
      'focus-trap',
      'fs-extra',
      'glob',
      'handlebars',
      'highcharts',
      'html-minifier',
      'loader.js',
      'minimatch',
      'morgan',
      'node-sass',
      'nopt',
      'pre-commit',
      'prettier',
      'proj4',
      'punycode',
      'readline2',
      'resolve',
      'rsvp',
      'stylelint',
      'stylelint-scss',
      'testem-multi-reporter',
      'testng',
      'uglify-js',
      'uuid',
      'walk-sync',
      'xmldom',
      'yargs',
      'yuidoc-bootstrap-theme',
      'yuidocjs'
    ]);

    expect(Object.keys(productSpec.product)).to.eql([
      'abi-js',
      'artdeco-eyeglass',
      'artdeco-hoverables',
      'artdeco-icons-web',
      'artdeco-node',
      'artdeco-publishing-longform',
      'core-web-i18n-preprocessors',
      'cross-promo-fe',
      'ember-ad-banner',
      'ember-cli-artdeco-carousel',
      'ember-cli-artdeco-chip',
      'ember-cli-artdeco-completeness-meter',
      'ember-cli-artdeco-global-alert',
      'ember-cli-artdeco-modal',
      'ember-cli-artdeco-pill',
      'ember-cli-artdeco-slider',
      'ember-cli-artdeco-tabs',
      'ember-cli-artdeco-toasts',
      'ember-cli-artdeco-typeahead-deprecated',
      'ember-cli-chartbeat-analytics-js',
      'ember-cli-deco-projections',
      'ember-cli-hamster-wheel',
      'ember-cli-i18n-leaf',
      'ember-cli-lisa-liam-banner',
      'ember-cli-payments',
      'ember-cli-pdsc-handler',
      'ember-cli-pemberly-artdeco',
      'ember-cli-pemberly-bpr',
      'ember-cli-pemberly-fastboot',
      'ember-cli-pemberly-i18n',
      'ember-cli-pemberly-jet-tracking',
      'ember-cli-pemberly-jstf-addon',
      'ember-cli-pemberly-lix',
      'ember-cli-pemberly-login-redirect',
      'ember-cli-pemberly-network',
      'ember-cli-pemberly-rum-tracking',
      'ember-cli-pemberly-security',
      'ember-cli-pemberly-serve',
      'ember-cli-pemberly-spark-placeholders',
      'ember-cli-pemberly-tracking',
      'ember-cli-realtime',
      'ember-cli-salary-histogram',
      'ember-cli-search-typeahead',
      'ember-cli-thirdparty-analytics',
      'ember-cli-ui-tabs',
      'ember-common-schemas',
      'ember-li-sw',
      'ember-m3-pdsc-model-builder',
      'ember-mpr-images',
      'ember-number-formatting',
      'ember-pdsc-mocker',
      'ember-restli',
      'ember-semaphore',
      'ember-stdlib',
      'ember-vector-upload-manager',
      'ember-web-deep-linking',
      'ember-x-li-track',
      'eslint-plugin-pemberly',
      'jet-static',
      'li-service-worker',
      'matryoshka',
      'media-uploader-common',
      'pemberly-api',
      'playerjs',
      'restli-utils',
      'rumjs',
      'stylelint-plugin-vw',
      'video-lib-common',
      'video-rumjs',
      'voyager-api',
      'web-push-notifications',
      'world-map',
    ]);

    expect(productSpec.product['abi-js']).to.eql({
      libraries: [
        '@linkedin/abi-js'
      ],
      version: '0.0.41'
    });
  });

  it('supports volta toolchain', function() {
    let product = new Project(`${FIXTURES}/voyager-web-with-volta/`);
    let { productSpec } = product.transformedProductSpec();

    expect(productSpec).to.have.keys([
      'archive',
      'build',
      'comment',
      'dependencyResolution',
      'description',
      'extSCM',
      'external',
      'group',
      'name',
      'product',
      'review',
      'runtime',
      'scmUrl',
      'topology',
      'trunkDev',
      'trunkGuardian',
      'variants',
      'version',
      'watchers',
    ]);

    expect(productSpec.build).to.have.keys([
      'commands',
      'toolchains',
      'type',
      'versions',
    ]);

    expect(productSpec.build.versions).to.have.keys([
      'java',
      'node',
      'phantomjs',
      'voyager-page-renderer',
      'yarn',
    ]);

    expect(productSpec.build.versions.node).to.eql('8.11.3');
    expect(productSpec.build.versions.yarn).to.eql('1.3.2');
  });

  it('supports voyager-web', function() {
    let project = new Project(`${FIXTURES}/voyager-web/`);
    let { productSpec } = project.transformedProductSpec();

    expect(Object.keys(productSpec)).to.eql([
      'name',
      'group',
      'version',
      'scmUrl',
      'comment',
      'description',
      'watchers',
      'build',
      'runtime',
      'review',
      'topology',
      'archive',
      'dependencyResolution',
      'external',
      'product',
      'trunkDev',
      'trunkGuardian',
      'variants',
      'extSCM',
    ]);

    expect(productSpec.name).to.eql('voyager-web');
    expect(productSpec.external.acorn).to.eql('npm:acorn:3.2.0');
    expect(productSpec.external['jquery-component']).to.eql('npm:@components/jquery:2.1.4-canary6a4fc54');

    expect(productSpec.external.testng).to.eql('org.testng:testng:6.4');

    expect(Object.keys(productSpec.external)).to.eql([
      'acorn',
      'analyze-css',
      'babel-eslint',
      'babel-plugin-external-helpers',
      'babel-plugin-transform-es2015-spread',
      'babel-plugin-transform-object-rest-spread',
      'broccoli-builder',
      'broccoli-clean-css',
      'broccoli-concat',
      'broccoli-concat-analyser',
      'broccoli-css-lang-optimizer',
      'broccoli-debug',
      'broccoli-eyeglass',
      'broccoli-funnel',
      'broccoli-merge-trees',
      'broccoli-persistent-filter',
      'calculate-cache-key-for-tree',
      'chalk',
      'cli-table',
      'colors',
      'commander',
      'connect-restreamer',
      'ember-a11y-testing',
      'ember-add-in-repo-tests',
      'ember-app-scheduler',
      'ember-asset-loader',
      'ember-cli',
      'ember-cli-app-version',
      'ember-cli-autoprefixer',
      'ember-cli-babel',
      'ember-cli-dependency-checker',
      'ember-cli-document-title',
      'ember-cli-eyeglass',
      'ember-cli-htmlbars',
      'ember-cli-htmlbars-inline-precompile',
      'ember-cli-inject-live-reload',
      'ember-cli-optimize',
      'ember-cli-pretender',
      'ember-cli-qunit',
      'ember-cli-shims-component',
      'ember-cli-template-lint',
      'ember-cli-uglify',
      'ember-component',
      'ember-data',
      'ember-disable-proxy-controllers',
      'ember-drag-drop',
      'ember-engines',
      'ember-exam',
      'ember-export-application-global',
      'ember-faker',
      'ember-fetch',
      'ember-highcharts',
      'ember-holy-futuristic-template-namespacing-batman',
      'ember-inflector',
      'ember-lifeline',
      'ember-line-clamp',
      'ember-link-action',
      'ember-load-initializers',
      'ember-local-config',
      'ember-m3',
      'ember-maybe-import-regenerator',
      'ember-native-dom-helpers',
      'ember-perf-timeline',
      'ember-prefetch',
      'ember-resolver',
      'ember-rollup',
      'ember-route-action-helper',
      'ember-route-alias',
      'ember-router-service-polyfill',
      'ember-singularity-mixins',
      'ember-sinon-sandbox',
      'ember-sortable',
      'ember-spaniel',
      'ember-template-lint',
      'ember-truncate',
      'ember-vendor-split',
      'ember-wormhole',
      'escape-string-regexp',
      'eslint',
      'eslint-config-airbnb-base',
      'eslint-config-prettier',
      'express',
      'eyeglass-restyle',
      'fixturify',
      'focus-trap',
      'fs-extra',
      'glob',
      'handlebars',
      'highcharts',
      'html-minifier',
      'jquery-component',
      'loader.js',
      'minimatch',
      'moment-component',
      'morgan',
      'node-sass',
      'nopt',
      'pre-commit',
      'prettier',
      'proj4',
      'punycode',
      'readline2',
      'resolve',
      'rsvp',
      'stylelint',
      'stylelint-scss',
      'testem-multi-reporter',
      'testng',
      'uglify-js',
      'usertiming-component',
      'uuid',
      'walk-sync',
      'xmldom',
      'yargs',
      'yuidoc-bootstrap-theme',
      'yuidocjs'
    ]);

    expect(Object.keys(productSpec.product)).to.eql([
      'abi-js',
      'artdeco-eyeglass',
      'artdeco-hoverables',
      'artdeco-icons-web',
      'artdeco-node',
      'artdeco-publishing-longform',
      'core-web-i18n-preprocessors',
      'cross-promo-fe',
      'ember-ad-banner',
      'ember-cli-artdeco-carousel',
      'ember-cli-artdeco-chip',
      'ember-cli-artdeco-completeness-meter',
      'ember-cli-artdeco-global-alert',
      'ember-cli-artdeco-modal',
      'ember-cli-artdeco-pill',
      'ember-cli-artdeco-slider',
      'ember-cli-artdeco-tabs',
      'ember-cli-artdeco-toasts',
      'ember-cli-artdeco-typeahead-deprecated',
      'ember-cli-chartbeat-analytics-js',
      'ember-cli-deco-projections',
      'ember-cli-hamster-wheel',
      'ember-cli-i18n-leaf',
      'ember-cli-lisa-liam-banner',
      'ember-cli-payments',
      'ember-cli-pdsc-handler',
      'ember-cli-pemberly-artdeco',
      'ember-cli-pemberly-bpr',
      'ember-cli-pemberly-fastboot',
      'ember-cli-pemberly-i18n',
      'ember-cli-pemberly-jet-tracking',
      'ember-cli-pemberly-jstf-addon',
      'ember-cli-pemberly-lix',
      'ember-cli-pemberly-login-redirect',
      'ember-cli-pemberly-network',
      'ember-cli-pemberly-rum-tracking',
      'ember-cli-pemberly-security',
      'ember-cli-pemberly-serve',
      'ember-cli-pemberly-spark-placeholders',
      'ember-cli-pemberly-tracking',
      'ember-cli-realtime',
      'ember-cli-salary-histogram',
      'ember-cli-search-typeahead',
      'ember-cli-thirdparty-analytics',
      'ember-cli-ui-tabs',
      'ember-common-schemas',
      'ember-li-sw',
      'ember-m3-pdsc-model-builder',
      'ember-mpr-images',
      'ember-number-formatting',
      'ember-pdsc-mocker',
      'ember-restli',
      'ember-semaphore',
      'ember-stdlib',
      'ember-vector-upload-manager',
      'ember-web-deep-linking',
      'ember-x-li-track',
      'eslint-plugin-pemberly',
      'jet-static',
      'li-service-worker',
      'matryoshka',
      'media-uploader-common',
      'pemberly-api',
      'playerjs',
      'restli-utils',
      'rumjs',
      'stylelint-plugin-vw',
      'video-lib-common',
      'video-rumjs',
      'voyager-api',
      'web-push-notifications',
      'world-map',
    ]);

    expect(productSpec.product['abi-js']).to.eql({
      libraries: [
        '@linkedin/abi-js'
      ],
      version: '0.0.41'
    });
  });

  it('supports eis', function() {
    let project = new Project(`${FIXTURES}/eis/`);
    let { productSpec } = project.transformedProductSpec();

    expect(Object.keys(productSpec)).to.eql([
      'name',
      'group',
      'version',
      'scmUrl',
      'comment',
      'description',
      'watchers',
      'build',
      'runtime',
      'review',
      'codecoveragecheckinprecommit',
      'topology',
      'archive',
      'dependencyResolution',
      'external',
      'product',
      'trunkDev',
      'extSCM',
    ]);

    expect(productSpec.external['broccoli-babel-transpiler']).to.eql('npm:broccoli-babel-transpiler:6.1.4');
    expect(productSpec.external['jquery-component']).to.eql('npm:@components/jquery:2.1.4');

    expect(productSpec.external.testng).to.eql('org.testng:testng:6.4');

    expect(Object.keys(productSpec.external)).to.eql([
      'broccoli-babel-transpiler',
      'cli-table',
      'connect-restreamer',
      'ember-browserify',
      'ember-cli',
      'ember-cli-app-version',
      'ember-cli-babel',
      'ember-cli-code-coverage',
      'ember-cli-content-security-policy',
      'ember-cli-document-title',
      'ember-cli-eslint',
      'ember-cli-eyeglass',
      'ember-cli-htmlbars',
      'ember-cli-htmlbars-inline-precompile',
      'ember-cli-inject-live-reload',
      'ember-cli-mirage',
      'ember-cli-moment-shim',
      'ember-cli-pretender',
      'ember-cli-qunit',
      'ember-cli-shims',
      'ember-cli-test-loader',
      'ember-cli-test-loader-component',
      'ember-cli-uglify',
      'ember-concurrency',
      'ember-content-editable',
      'ember-data',
      'ember-disable-proxy-controllers',
      'ember-drag-drop',
      'ember-exam',
      'ember-export-application-global',
      'ember-fast-link-to',
      'ember-inflector',
      'ember-load-initializers',
      'ember-local-config',
      'ember-native-dom-helpers',
      'ember-pikaday',
      'ember-prefetch',
      'ember-qunit-component',
      'ember-qunit-notifications-component',
      'ember-raf-measure',
      'ember-resolver',
      'ember-route-action-helper',
      'ember-singularity-mixins',
      'ember-sinon-qunit',
      'ember-source',
      'ember-test-selectors',
      'ember-truncate',
      'ember-truth-helpers',
      'ember-wormhole',
      'eslint-plugin-ember-best-practices',
      'express',
      'fake-xml-http-request-component',
      'faker-component',
      'glob',
      'jquery-component',
      'jquery-simulate-ext',
      'loader.js',
      'lodash-component',
      'moment-component',
      'moment-timezone-component',
      'morgan',
      'pretender-component',
      'qunit-component',
      'qunit-notifications-component',
      'route-recognizer-component',
      'spaniel',
      'testem',
      'testng',
      'uglify-js',
      'usertiming-component',
      'uuid',
      'vertical-collection-at-html-next',
    ]);

    expect(Object.keys(productSpec.product)).to.eql([
      'artdeco-eyeglass',
      'eis-api',
      'ember-cli-artdeco-carousel',
      'ember-cli-artdeco-chip',
      'ember-cli-artdeco-completeness-meter',
      'ember-cli-artdeco-datepicker',
      'ember-cli-artdeco-dropdown',
      'ember-cli-artdeco-modal',
      'ember-cli-artdeco-tabs',
      'ember-cli-artdeco-toasts',
      'ember-cli-i18n-leaf',
      'ember-cli-pdsc-handler',
      'ember-cli-pdsc-mocker-mirage',
      'ember-cli-pemberly-artdeco',
      'ember-cli-pemberly-bpr',
      'ember-cli-pemberly-i18n',
      'ember-cli-pemberly-jet-tracking',
      'ember-cli-pemberly-jstf-addon',
      'ember-cli-pemberly-lix',
      'ember-cli-pemberly-login-redirect',
      'ember-cli-pemberly-rum-tracking',
      'ember-cli-pemberly-serve',
      'ember-cli-pemberly-spark-placeholders',
      'ember-cli-pemberly-tracking',
      'ember-cli-search-typeahead',
      'ember-cli-ui-modal',
      'ember-cli-ui-tabs',
      'ember-common-schemas',
      'ember-mpr-images',
      'ember-payments-embed',
      'ember-pdsc-mocker',
      'ember-restli',
      'ember-x-li-track',
      'jsecure',
      'learning-enterprise-api',
      'learning-web-common',
      'learning-web-paths',
      'pemberly-api',
      'pemberly-environment',
      'restli-utils',
      'rumjs',
      'tracking-utils',
      'web-tracking-transport',
    ]);

    expect(productSpec.product.rumjs).to.eql({
      libraries: [
        '@linkedin/rumjs'
      ],
      version: '2.1.55'
    });
  });

  it('supports learning-web', function() {
    let project = new Project(`${FIXTURES}/learning-web`);
    let { productSpec } = project.transformedProductSpec();

    expect(Object.keys(productSpec)).to.eql([
      'name',
      'group',
      'version',
      'scmUrl',
      'comment',
      'description',
      'watchers',
      'build',
      'runtime',
      'review',
      'codecoveragecheckinprecommit',
      'topology',
      'archive',
      'dependencyResolution',
      'external',
      'product',
      'trunkDev',
      'extSCM',
    ]);

    expect(productSpec.name).to.eql('learning-web');
    expect(productSpec.external['broccoli-babel-transpiler']).to.eql('npm:broccoli-babel-transpiler:6.1.4');
    expect(productSpec.external['jquery-component']).to.eql('npm:@components/jquery:3.3.1');

    expect(Object.keys(productSpec.external)).to.eql([
      'babel-eslint',
      'babel-plugin-transform-object-rest-spread',
      'broccoli-babel-transpiler',
      'broccoli-eyeglass',
      'broccoli-funnel',
      'broccoli-handlebars',
      'broccoli-handlebars-precompiler',
      'broccoli-merge-trees',
      'broccoli-postcss',
      'broccoli-rollup',
      'broccoli-stew',
      'broccoli-uglify-js',
      'cli-table',
      'cssnano',
      'deasync',
      'ember-browserify',
      'ember-cli',
      'ember-cli-app-version',
      'ember-cli-autoprefixer',
      'ember-cli-babel',
      'ember-cli-code-coverage',
      'ember-cli-eyeglass',
      'ember-cli-fastboot',
      'ember-cli-head',
      'ember-cli-htmlbars',
      'ember-cli-htmlbars-inline-precompile',
      'ember-cli-inject-live-reload',
      'ember-cli-mirage',
      'ember-cli-pretender',
      'ember-cli-qunit',
      'ember-cli-release',
      'ember-cli-shims',
      'ember-cli-sri',
      'ember-cli-test-loader',
      'ember-cli-uglify',
      'ember-data',
      'ember-disable-proxy-controllers',
      'ember-exam',
      'ember-export-application-global',
      'ember-lifeline',
      'ember-load-initializers',
      'ember-local-config',
      'ember-perf-timeline',
      'ember-prefetch',
      'ember-resolver',
      'ember-singularity-mixins',
      'ember-sinon',
      'ember-source',
      'ember-spaniel',
      'eslint',
      'eslint-config-airbnb-base',
      'eslint-plugin-ember',
      'eslint-plugin-import',
      'express',
      'fake-xml-http-request-component',
      'faker-component',
      'gitbook',
      'gitbook-cli',
      'glob',
      'graceful-fs',
      'handlebars',
      'jquery-component',
      'jquery.browser-component',
      'loader.js',
      'mediaelement-component',
      'moment-component',
      'morgan',
      'pre-commit',
      'pretender-component',
      'prettier',
      'rollup-plugin-babel',
      'rollup-plugin-commonjs',
      'rollup-plugin-node-resolve',
      'route-recognizer-component',
      'thread-sleep',
      'usertiming-component',
      'uuid',
      'wdio-junit-reporter',
      'wdio-mocha-framework',
      'wdio-selenium-standalone-service',
      'webdriverio'
    ]);

    expect(Object.keys(productSpec.external)).to.eql([
      'babel-eslint',
      'babel-plugin-transform-object-rest-spread',
      'broccoli-babel-transpiler',
      'broccoli-eyeglass',
      'broccoli-funnel',
      'broccoli-handlebars',
      'broccoli-handlebars-precompiler',
      'broccoli-merge-trees',
      'broccoli-postcss',
      'broccoli-rollup',
      'broccoli-stew',
      'broccoli-uglify-js',
      'cli-table',
      'cssnano',
      'deasync',
      'ember-browserify',
      'ember-cli',
      'ember-cli-app-version',
      'ember-cli-autoprefixer',
      'ember-cli-babel',
      'ember-cli-code-coverage',
      'ember-cli-eyeglass',
      'ember-cli-fastboot',
      'ember-cli-head',
      'ember-cli-htmlbars',
      'ember-cli-htmlbars-inline-precompile',
      'ember-cli-inject-live-reload',
      'ember-cli-mirage',
      'ember-cli-pretender',
      'ember-cli-qunit',
      'ember-cli-release',
      'ember-cli-shims',
      'ember-cli-sri',
      'ember-cli-test-loader',
      'ember-cli-uglify',
      'ember-data',
      'ember-disable-proxy-controllers',
      'ember-exam',
      'ember-export-application-global',
      'ember-lifeline',
      'ember-load-initializers',
      'ember-local-config',
      'ember-perf-timeline',
      'ember-prefetch',
      'ember-resolver',
      'ember-singularity-mixins',
      'ember-sinon',
      'ember-source',
      'ember-spaniel',
      'eslint',
      'eslint-config-airbnb-base',
      'eslint-plugin-ember',
      'eslint-plugin-import',
      'express',
      'fake-xml-http-request-component',
      'faker-component',
      'gitbook',
      'gitbook-cli',
      'glob',
      'graceful-fs',
      'handlebars',
      'jquery-component',
      'jquery.browser-component',
      'loader.js',
      'mediaelement-component',
      'moment-component',
      'morgan',
      'pre-commit',
      'pretender-component',
      'prettier',
      'rollup-plugin-babel',
      'rollup-plugin-commonjs',
      'rollup-plugin-node-resolve',
      'route-recognizer-component',
      'thread-sleep',
      'usertiming-component',
      'uuid',
      'wdio-junit-reporter',
      'wdio-mocha-framework',
      'wdio-selenium-standalone-service',
      'webdriverio',
    ]);

    expect(productSpec.product.rumjs).to.eql({
      libraries: [
        '@linkedin/rumjs'
      ],
      version: '2.1.28' // learning web pins rumjs to 2.1.28
    });
  });

  it('supports ember-cli-pemberly-rum-tracking', function() {
    let project = new Project(`${FIXTURES}/ember-cli-pemberly-rum-tracking/`);
    let { productSpec } = project.transformedProductSpec();

    expect(productSpec.name).to.eql('ember-cli-pemberly-rum-tracking');
    expect(Object.keys(productSpec)).to.eql([
      'name',
      'group',
      'version',
      'scmUrl',
      'comment',
      'description',
      'watchers',
      'build',
      'runtime',
      'review',
      'codecoveragecheckinprecommit',
      'topology',
      'archive',
      'dependencyResolution',
      'external',
      'product',
      'trunkDev',
      'extSCM',
    ]);

    expect(productSpec.external['broccoli-funnel']).to.eql('npm:broccoli-funnel:2.0.1');
    expect(productSpec.external['jquery-component']).to.eql('npm:@components/jquery:3.3.1');

    expect(Object.keys(productSpec.external)).to.eql([
      'broccoli-asset-rev',
      'broccoli-funnel',
      'broccoli-merge-trees',
      'broccoli-stew',
      'ember-ajax',
      'ember-cli',
      'ember-cli-app-version',
      'ember-cli-babel',
      'ember-cli-eslint',
      'ember-cli-htmlbars',
      'ember-cli-htmlbars-inline-precompile',
      'ember-cli-inject-live-reload',
      'ember-cli-pretender',
      'ember-cli-qunit',
      'ember-cli-shims',
      'ember-cli-shims-component',
      'ember-cli-test-loader',
      'ember-component',
      'ember-data',
      'ember-disable-prototype-extensions',
      'ember-load-initializers',
      'ember-resolver',
      'ember-rollup',
      'ember-sinon',
      'ember-source',
      'ember-spaniel',
      'eslint-plugin-ember',
      'eslint-plugin-node',
      'express',
      'glob',
      'jquery-component',
      'loader.js',
      'morgan',
      'usertiming',
      'usertiming-component'
    ]);

    expect(Object.keys(productSpec.product)).to.eql([
      'ember-cli-pemberly-lix',
      'ember-stdlib',
      'rumjs',
      'tracking-utils',
    ]);

    expect(productSpec.product.rumjs).to.eql({
      libraries: [
        '@linkedin/rumjs'
      ],
      version: '2.1.55'
    });
  });
});
