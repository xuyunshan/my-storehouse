// prepack script
// create build dir
// and update the current version in package.json for yarn pack

const Task = require('../helpers/task');
const { modifyVersion } = require('../helpers/modify-package-json');
const getNextVersion = require('../helpers/next-version');
const createBuildDir = require('../helpers/create-build-dir');
const getProductInfo = require('../helpers/get-product-info');
const { createMetaJson } = require('../helpers/meta-json');
const { createPackageLock } = require('../helpers/package-lock');

module.exports = class Prepack extends Task {
  constructor({ mpLocation, nextVersion } = {}) {
    super(...arguments);
    this.name = 'prepack';
    this.mpLocation = mpLocation;
    this.productInfo = getProductInfo(mpLocation);
    this.nextVersion = nextVersion || null;
  }

  async run() {
    await createBuildDir(this.productInfo);
    this.ui.writeInfoLine(
      `[pre-pack]: build dir has been create successfully: ${this.productInfo.buildDir}`
    );
    await createMetaJson(this.productInfo.metaFile);
    this.ui.writeInfoLine(
      `[pre-pack]: meta.json has been created successfully: ${this.productInfo.metaFile}`
    );
    // get next version
    const nextVersion = this.nextVersion
      ? this.nextVersion
      : await getNextVersion(this.productInfo.buildDir);
    await modifyVersion(
      this.productInfo.PACKAGE_JSON,
      nextVersion,
      this.productInfo.metaFile
    );
    this.ui.writeInfoLine(
      `[pre-pack]: the version in package.json has been modified successfully: ${this.productInfo.PACKAGE_JSON}`
    );
    /**
     * THIS IS FOR SUPPORTING LEGACY MP ONLY
     * in multiproducts which haven't been migrated to yarn
     * when running build process using gradle-pemberly
     * dependencyBuildPreparationTask requires a package.lock file in each installed dependency
     *
     * After yarn migration gradle-pemberly will look for yarn.lock instead
     * Doc for yarn migration: go/yarn-migration
     *
     */
    await createPackageLock(this.mpLocation);
  }
};
