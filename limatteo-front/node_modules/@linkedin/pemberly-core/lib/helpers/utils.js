const http = require('http');
const fs = require('fs-extra');
const get = require('lodash.get');
const SilentError = require('silent-error');

module.exports.fetch = function fetch(fileName, downloadLocation) {
  return new Promise((resolve, reject) => {
    const file = fs.createWriteStream(fileName);

    http
      .get(downloadLocation, response => {
        response.pipe(file);

        response.on('end', () => {
          if (response.statusCode !== 200) {
            return reject(response.statusCode);
          }
          resolve();
        });
      })
      .on('error', reject);
  });
};

module.exports.getPropertyFrom = function getPropertyFrom(
  property,
  path,
  defaultValue
) {
  if (fs.existsSync(path)) {
    const json = fs.readJsonSync(path);
    return get(json, property, defaultValue);
  }
  if (typeof defaultValue === 'undefined') {
    throw new SilentError(
      `[pemberly-core] Could not read property '${property}' from ${path} as it does not exist`
    );
  }

  return defaultValue;
};

module.exports.ARTIFACTORY_URL =
  'http://dev-artifactory.corp.linkedin.com:8081/artifactory/release/com/linkedin';
