const fs = require('fs-extra');
const SilentError = require('silent-error');

/**
 * Create .meta.json in build dir
 * to store info like current version in package.json etc
 *
 * @param {String} rootPath
 * @returns {Promise}
 */
async function createMetaJson(metaFile) {
  // default meta.json
  const template = { version: '' };
  try {
    await fs.writeJSON(metaFile, template, { spaces: 2 });
  } catch (e) {
    throw new SilentError(`[pre-pack]: failed to create ${metaFile}`);
  }
}

/**
 * get value in meta.json based on a givin key
 *
 * @param {String} metaFile
 * @param {String} key
 * @returns {Promise}
 */
async function getValue(metaFile, key) {
  try {
    const meta = await fs.readJSON(metaFile);
    return meta[key];
  } catch (e) {
    return null;
  }
}
/**
 * set value in meta.json based on a givin key and value
 *
 * @param {String} metaFile
 * @param {String} key
 * @param {String} value
 * @returns {Promise}
 */
async function setValue(metaFile, key, value) {
  try {
    const meta = await fs.readJSON(metaFile);
    meta[key] = value;
    await fs.writeJSON(metaFile, meta, { spaces: 2 });
  } catch (e) {
    throw new SilentError(`[pre-pack]: failed to update ${metaFile}`);
  }
}

module.exports.createMetaJson = createMetaJson;
module.exports.getValue = getValue;
module.exports.setValue = setValue;
