{"remainingRequest":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunsxu/Desktop/my-storehouse/limatteo-front/src/components/goblin/Rule/PopImageRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/src/components/goblin/Rule/PopImageRule.vue","mtime":1629791691466},{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/cache-loader/dist/cjs.js","mtime":1613817252946},{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/babel-loader/lib/index.js","mtime":1613817252617},{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/cache-loader/dist/cjs.js","mtime":1613817252946},{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/vue-loader/lib/index.js","mtime":1613817257814}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// single pop image rule\nimport mixin from '../utils/mixin';\nimport { POP_RULE_ENTRANCE } from '../utils/constants';\nexport default {\n  props: ['rule'],\n  mixins: [mixin],\n  data() {\n    return {\n      showModal: false,\n      styleCandidates: POP_RULE_ENTRANCE.styleCandidates,\n      defaultStyle: POP_RULE_ENTRANCE.defaultStyle,\n    };\n  },\n  methods: {\n    openModal(entrance) {\n      document.documentElement.style.overflow = 'hidden';\n      document.getElementById(\"app\").style.height = '100%';\n      this.fireTracking(entrance)\n      this.showModal = true;\n    },\n    closeModal() {\n      document.documentElement.style.overflow = 'scroll';\n      document.getElementById(\"app\").style.height = 'auto';\n      this.showModal = false;\n    },\n  },\n};\n",{"version":3,"sources":["PopImageRule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopImageRule.vue","sourceRoot":"src/components/goblin/Rule","sourcesContent":["<template>\n  <div v-if=\"rule && rule.entrance\">\n    <div\n      class=\"entrance\"\n      @click=\"openModal(rule.entrance)\"\n      :style=\"`${genStyle(rule.entrance.style)};${genBg(rule.entrance.bgStyle)};`\"\n    ></div>\n    <div class=\"modalShadow\" v-show=\"showModal\">\n      <div\n        class=\"modalCont\"\n        :style=\"`${genStyle(rule.content.style)};`\"\n      >\n        <img :src=\"rule.content.bgStyle\" alt=\"\">\n        <div @click=\"closeModal\" class=\"closeIcon\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// single pop image rule\nimport mixin from '../utils/mixin';\nimport { POP_RULE_ENTRANCE } from '../utils/constants';\nexport default {\n  props: ['rule'],\n  mixins: [mixin],\n  data() {\n    return {\n      showModal: false,\n      styleCandidates: POP_RULE_ENTRANCE.styleCandidates,\n      defaultStyle: POP_RULE_ENTRANCE.defaultStyle,\n    };\n  },\n  methods: {\n    openModal(entrance) {\n      document.documentElement.style.overflow = 'hidden';\n      document.getElementById(\"app\").style.height = '100%';\n      this.fireTracking(entrance)\n      this.showModal = true;\n    },\n    closeModal() {\n      document.documentElement.style.overflow = 'scroll';\n      document.getElementById(\"app\").style.height = 'auto';\n      this.showModal = false;\n    },\n  },\n};\n</script>\n\n<style lang='scss' scoped>\n.modalShadow {\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  position: fixed;\n  top: 0;\n  left: 0;\n  margin: auto;\n  z-index: 1000;\n  .modalCont {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    .closeIcon {\n      position: absolute;\n      right: 24px;\n      top: 24px;\n      width: 24px;\n      height: 24px;\n      background: center / cover no-repeat url('../../../assets/image/close_icon.png');\n      -webkit-tap-highlight-color: transparent;\n    }\n    img{\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n.overflow-hidden {\n  overflow: hidden;\n}\n</style>\n"]}]}