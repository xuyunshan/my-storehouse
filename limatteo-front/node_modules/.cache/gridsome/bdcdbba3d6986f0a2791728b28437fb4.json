{"remainingRequest":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/yunsxu/Desktop/my-storehouse/limatteo-front/src/components/buefy/utils/SlotComponent.js","dependencies":[{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/src/components/buefy/utils/SlotComponent.js","mtime":1618390616081},{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/cache-loader/dist/cjs.js","mtime":1613817252946},{"path":"/Users/yunsxu/Desktop/my-storehouse/limatteo-front/node_modules/babel-loader/lib/index.js","mtime":1613817252617}],"contextDependencies":[],"result":["import \"core-js/modules/es.function.name\";\nimport { isVueComponent } from './helpers';\nexport default {\n  name: 'BSlotComponent',\n  props: {\n    component: {\n      type: Object,\n      required: true\n    },\n    name: {\n      type: String,\n      \"default\": 'default'\n    },\n    scoped: {\n      type: Boolean\n    },\n    props: {\n      type: Object\n    },\n    tag: {\n      type: String,\n      \"default\": 'div'\n    },\n    event: {\n      type: String,\n      \"default\": 'hook:updated'\n    }\n  },\n  methods: {\n    refresh: function refresh() {\n      this.$forceUpdate();\n    }\n  },\n  created: function created() {\n    if (isVueComponent(this.component)) {\n      this.component.$on(this.event, this.refresh);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (isVueComponent(this.component)) {\n      this.component.$off(this.event, this.refresh);\n    }\n  },\n  render: function render(createElement) {\n    if (isVueComponent(this.component)) {\n      return createElement(this.tag, {}, this.scoped ? this.component.$scopedSlots[this.name](this.props) : this.component.$slots[this.name]);\n    }\n  }\n};",{"version":3,"sources":["/Users/yunsxu/Desktop/my-storehouse/limatteo-front/src/components/buefy/utils/SlotComponent.js"],"names":["isVueComponent","name","props","component","type","Object","required","String","scoped","Boolean","tag","event","methods","refresh","$forceUpdate","created","$on","beforeDestroy","$off","render","createElement","$scopedSlots","$slots"],"mappings":";AAAA,SAASA,cAAT,QAA+B,WAA/B;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAE,gBADK;AAEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KADR;AAKHL,IAAAA,IAAI,EAAE;AACFG,MAAAA,IAAI,EAAEG,MADJ;AAEF,iBAAS;AAFP,KALH;AASHC,IAAAA,MAAM,EAAE;AACJJ,MAAAA,IAAI,EAAEK;AADF,KATL;AAYHP,IAAAA,KAAK,EAAE;AACHE,MAAAA,IAAI,EAAEC;AADH,KAZJ;AAeHK,IAAAA,GAAG,EAAE;AACDN,MAAAA,IAAI,EAAEG,MADL;AAED,iBAAS;AAFR,KAfF;AAmBHI,IAAAA,KAAK,EAAE;AACHP,MAAAA,IAAI,EAAEG,MADH;AAEH,iBAAS;AAFN;AAnBJ,GAFI;AA0BXK,EAAAA,OAAO,EAAE;AACLC,IAAAA,OADK,qBACK;AACN,WAAKC,YAAL;AACH;AAHI,GA1BE;AA+BXC,EAAAA,OA/BW,qBA+BD;AACN,QAAIf,cAAc,CAAC,KAAKG,SAAN,CAAlB,EAAoC;AAChC,WAAKA,SAAL,CAAea,GAAf,CAAmB,KAAKL,KAAxB,EAA+B,KAAKE,OAApC;AACH;AACJ,GAnCU;AAoCXI,EAAAA,aApCW,2BAoCK;AACZ,QAAIjB,cAAc,CAAC,KAAKG,SAAN,CAAlB,EAAoC;AAChC,WAAKA,SAAL,CAAee,IAAf,CAAoB,KAAKP,KAAzB,EAAgC,KAAKE,OAArC;AACH;AACJ,GAxCU;AAyCXM,EAAAA,MAzCW,kBAyCJC,aAzCI,EAyCW;AAClB,QAAIpB,cAAc,CAAC,KAAKG,SAAN,CAAlB,EAAoC;AAChC,aAAOiB,aAAa,CAAC,KAAKV,GAAN,EAAW,EAAX,EAChB,KAAKF,MAAL,GAAc,KAAKL,SAAL,CAAekB,YAAf,CAA4B,KAAKpB,IAAjC,EAAuC,KAAKC,KAA5C,CAAd,GACM,KAAKC,SAAL,CAAemB,MAAf,CAAsB,KAAKrB,IAA3B,CAFU,CAApB;AAGH;AACJ;AA/CU,CAAf","sourcesContent":["import { isVueComponent } from './helpers'\n\nexport default {\n    name: 'BSlotComponent',\n    props: {\n        component: {\n            type: Object,\n            required: true\n        },\n        name: {\n            type: String,\n            default: 'default'\n        },\n        scoped: {\n            type: Boolean\n        },\n        props: {\n            type: Object\n        },\n        tag: {\n            type: String,\n            default: 'div'\n        },\n        event: {\n            type: String,\n            default: 'hook:updated'\n        }\n    },\n    methods: {\n        refresh() {\n            this.$forceUpdate()\n        }\n    },\n    created() {\n        if (isVueComponent(this.component)) {\n            this.component.$on(this.event, this.refresh)\n        }\n    },\n    beforeDestroy() {\n        if (isVueComponent(this.component)) {\n            this.component.$off(this.event, this.refresh)\n        }\n    },\n    render(createElement) {\n        if (isVueComponent(this.component)) {\n            return createElement(this.tag, {},\n                this.scoped ? this.component.$scopedSlots[this.name](this.props)\n                    : this.component.$slots[this.name])\n        }\n    }\n}\n"]}]}